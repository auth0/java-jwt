plugins {
    id 'java'
    id 'jacoco'
    id 'com.jfrog.bintray'
    id 'com.auth0.gradle.oss-library.java'
}

logger.lifecycle("Using version ${version} for ${group}.${name}")

oss {
    name "java jwt"
    repository "java-jwt"
    organization "auth0"
    description "Java implementation of JSON Web Token (JWT)"
    baselineCompareVersion "3.13.0"

    developers {
        auth0 {
            displayName = "Auth0"
            email = "oss@auth0.com"
        }
        lbalmaceda {
            displayName = "Luciano Balmaceda"
            email = "luciano.balmaceda@auth0.com"
        }
        hzalaz {
            displayName = "Hernan Zalazar"
            email = "hernan@auth0.com"
        }
    }
}

def javaVersion = 8
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(javaVersion)
    }
}

compileJava {
    sourceCompatibility "$javaVersion"
    targetCompatibility "$javaVersion"
}

// Use latest JDK for javadoc generation
tasks.withType(Javadoc).configureEach {
    javadocTool = javaToolchains.javadocToolFor {
        languageVersion = JavaLanguageVersion.of(16)
    }
}

javadoc {
    // Exclude internal implementation package from javadoc
    excludes = ['com/auth0/jwt/impl']
    // Specify Java version this project uses
    // Otherwise would use version of javadoc toolchain by default which could
    // cause compilation error mismatch between compileJava and javadoc creation
    options.addStringOption('-release', "$javaVersion")
}

dependencies {
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.0'
    testImplementation 'org.bouncycastle:bcprov-jdk15on:1.60'
    testImplementation 'junit:junit:4.12'
    testImplementation 'net.jodah:concurrentunit:0.4.3'
    testImplementation 'org.hamcrest:java-hamcrest:2.0.0.0'
    testImplementation 'org.mockito:mockito-core:2.18.3'
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

test {
    testLogging {
        events "skipped", "failed", "standardError"
        exceptionFormat "short"
    }
}
